2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now! 
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
	2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
    java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
    	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
    	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
    	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
    	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
    	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
    	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
    	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
    	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
    	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
    	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
    	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
    	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
    	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
    	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
    	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
    	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
    	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
    	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
    	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
    	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
    	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
    	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
    	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
    	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
    	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
    	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
    	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
    	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
    	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
    	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
    	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
    	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
    	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
    	at com.sf.collecat.node.Main.main(Main.java:21)
    Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
    	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
    	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
    	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
    	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
    	... 35 more
    ColleCat-Node worker thread pool size: 3
    ColleCat-Node is running now!
    2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
    2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
    2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
    	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
    	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
    	at kafka.utils.Utils$.swallow(Utils.scala:172)
    	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
    	at kafka.utils.Utils$.swallowError(Utils.scala:45)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
    	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
    	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
    	at kafka.utils.Utils$.swallow(Utils.scala:172)
    	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
    	at kafka.utils.Utils$.swallowError(Utils.scala:45)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
    	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
    	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
    	at kafka.utils.Utils$.swallow(Utils.scala:172)
    	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
    	at kafka.utils.Utils$.swallowError(Utils.scala:45)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
    2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
    java.nio.channels.ClosedChannelException
    	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
    	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
    	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
    	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
    	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
    	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
    	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
    	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
    	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
    	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
    	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
    	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
    	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
    	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
    	at kafka.producer.Producer.send(Producer.scala:77)
    	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
    	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
    	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
    	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
    	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
    	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
    	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-03 09:04:11 [ERROR] [CuratorClient] [main] collecat.node.zk.CuratorClient.<init>():66 - Caught ZK Exception!
java.net.UnknownHostException: zhanghaoxin-2.novalocal: zhanghaoxin-2.novalocal
	at java.net.InetAddress.getLocalHost(InetAddress.java:1473)
	at com.sf.collecat.node.zk.CuratorClient.<init>(CuratorClient.java:63)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:148)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:121)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:277)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1075)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:979)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:487)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:917)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:860)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:775)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:489)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:87)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1146)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:633)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.sf.collecat.node.Main.main(Main.java:21)
Caused by: java.net.UnknownHostException: zhanghaoxin-2.novalocal
	at java.net.Inet4AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$1.lookupAllHostAddr(InetAddress.java:901)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1293)
	at java.net.InetAddress.getLocalHost(InetAddress.java:1469)
	... 35 more
ColleCat-Node worker thread pool size: 3
ColleCat-Node is running now!
2016-08-04 00:30:10 [WARN] [ZKPaths] [Curator-TreeCache-1] utils.ZKPaths$CreateModeHolder.<clinit>():76 - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:12 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:13 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:14 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:15 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:16 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:17 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:18 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:19 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:20 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:21 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:22 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:23 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:24 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:25 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:26 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:27 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:28 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:29 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:30 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:31 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:33 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:35 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:36 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:38 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:39 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:40 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:44 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:45 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:46 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:47 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:51 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:52 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:53 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:54 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:30:55 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:06 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:07 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:08 [WARN] [JDBCConnection] [pool-4-thread-1] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:09 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:10 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:11 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:31:29 [WARN] [JDBCConnection] [pool-4-thread-2] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 00:33:21 [WARN] [JDBCConnection] [pool-4-thread-3] t.node.jdbc.JDBCConnectionPool.getConnection():51 - Do not panic,new data source generated
2016-08-04 01:10:14 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 7 to broker 0 with data for partitions [SGS_TT_WB_EXCEP,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:10:49 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 6 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-05 01:13:45 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 21 to broker 4 with data for partitions [SGS_TT_EXP_TASK_INFO,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:13:50 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 25 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:14:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 17 to broker 1 with data for partitions [SGS_TT_TASK_REQ,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-06 01:15:22 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 37 to broker 2 with data for partitions [SGS_TT_TASK_ITEM_REL,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:16:52 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 4 with data for partitions [SGS_TT_ORDER_STATUS,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:17:19 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 44 to broker 4 with data for partitions [SGS_TT_TASK_ITEM_REL,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:18:56 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 35 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-07 01:19:27 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 38 to broker 0 with data for partitions [SGS_TT_REC_ORD,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-10 01:19:38 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 39 to broker 2 with data for partitions [SGS_TT_REC_ORD,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-12 01:19:57 [WARN] [ClientUtils$] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 39 for topics [Set(SGS_TT_REC_ORD)] from broker [id:2,host:10.202.24.7,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$2.apply$mcV$sp(DefaultEventHandler.scala:78)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:78)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:20:17 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 47 to broker 0 with data for partitions [SGS_TT_REQ_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-13 01:23:25 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 8 to broker 3 with data for partitions [SGS_TT_DEL_ORD_FEE,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-14 01:23:55 [WARN] [ClientUtils$] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 10 for topics [Set(SGS_TT_DEL_ORD_FEE)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:24:15 [WARN] [ClientUtils$] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Fetching topic metadata with correlation id 64 for topics [Set(SGS_TT_TASK_REQ)] from broker [id:0,host:10.202.24.5,port:9094] failed
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:113)
	at kafka.client.ClientUtils$.fetchTopicMetadata(ClientUtils.scala:58)
	at kafka.producer.BrokerPartitionInfo.updateInfo(BrokerPartitionInfo.scala:82)
	at kafka.producer.async.DefaultEventHandler$$anonfun$handle$1.apply$mcV$sp(DefaultEventHandler.scala:67)
	at kafka.utils.Utils$.swallow(Utils.scala:172)
	at kafka.utils.Logging$class.swallowError(Logging.scala:106)
	at kafka.utils.Utils$.swallowError(Utils.scala:45)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:67)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:26:09 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 2 to broker 3 with data for partitions [SGS_TT_TASK_MSG_ERR,0]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:29 [WARN] [DefaultEventHandler] [pool-4-thread-2]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 60 to broker 1 with data for partitions [SGS_TT_WB_EXCEP,3]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-15 01:31:31 [WARN] [DefaultEventHandler] [pool-4-thread-1]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 4 to broker 1 with data for partitions [SGS_TT_TASK_RES,1]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:49:30 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 157 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:01 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 160 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
2016-08-04 01:50:31 [WARN] [DefaultEventHandler] [pool-4-thread-3]      kafka.utils.Logging$class.warn():89 - Failed to send producer request with correlation id 163 to broker 3 with data for partitions [SGS_TT_TASK_ITEM_REL,2]
java.nio.channels.ClosedChannelException
	at kafka.network.BlockingChannel.send(BlockingChannel.scala:100)
	at kafka.producer.SyncProducer.liftedTree1$1(SyncProducer.scala:73)
	at kafka.producer.SyncProducer.kafka$producer$SyncProducer$$doSend(SyncProducer.scala:72)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.producer.SyncProducer$$anonfun$send$1$$anonfun$apply$mcV$sp$1.apply(SyncProducer.scala:103)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply$mcV$sp(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.producer.SyncProducer$$anonfun$send$1.apply(SyncProducer.scala:102)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.producer.SyncProducer.send(SyncProducer.scala:101)
	at kafka.producer.async.DefaultEventHandler.kafka$producer$async$DefaultEventHandler$$send(DefaultEventHandler.scala:255)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:106)
	at kafka.producer.async.DefaultEventHandler$$anonfun$dispatchSerializedData$2.apply(DefaultEventHandler.scala:100)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.producer.async.DefaultEventHandler.dispatchSerializedData(DefaultEventHandler.scala:100)
	at kafka.producer.async.DefaultEventHandler.handle(DefaultEventHandler.scala:72)
	at kafka.producer.Producer.send(Producer.scala:77)
	at kafka.javaapi.producer.Producer.send(Producer.scala:33)
	at com.sf.kafka.api.produce.KafkaProducer.sendBytes(KafkaProducer.java:39)
	at com.sf.kafka.api.produce.ProducerPool.sendBytes(ProducerPool.java:52)
	at com.sf.kafka.api.produce.BaseProducer.sendString(BaseProducer.java:14)
	at com.sf.collecat.node.kafka.KafkaConnection.send(KafkaConnection.java:39)
	at com.sf.collecat.node.executor.JobThread.run(JobThread.java:50)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)

